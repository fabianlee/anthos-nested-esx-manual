#
# To remove the OOTB istio that comes with Anthos 1.4 and replace with a full 1.6.6 istio operator
#

# remove my istio components
cd ~/k8s
kubectl delete -f istio-ootb/my-istio-virtualservice.yaml
kubectl delete -f istio-ootb/istio-autogenerated-k8s-ingress.yaml
kubectl delete -f istio/my-service-for-istio.yaml

# remove ootb istio components
cd ~/k8s/istio-ootb
./delete-istio-ootb-components.sh


# install istio 1.6.6 operator
cd ~/k8s
export istiover=1.6.6
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck
istio-$istiover/bin/istioctl operator init


kubectl get all -n istio-operator
kubectl create ns istio-system

kubectl apply -f istio-operator/istio-operator-1.6.6.yaml

# until you see "Addons installed"
istio-operator/show-istio-operator-logs.sh

# then wait for all components to be 'Running'
watch -n2 kubectl get pods -n istio-system

# 'istio-ingressgateway' will be on EXTERNAL-IP
kubectl get services -n istio-system

# apply namespace labels for 1.6.6 (using older 'istio-injection')
istio-operator/namespace-labels-for-1.6.6.sh 

# create tls key/cert, k8s TLS secret, istio gateway using secret
cd ~/k8s/istio
./make-self-signed-cert.sh

cd ~/k8s/istio-operator
./create-k8s-tls-secret.sh

# 'my-istio-deployment' and 'my-istio-service'
kubectl apply -f my-istio-deployment-and-service.yaml
# 'my-istio-virtualservice'
kubectl apply -f my-istio-virtualservice.yaml
# 'istio-ingressgateway' referencing 'tls-credential' secret
kubectl apply -f my-istio-ingress-gateway.yaml

# validate from either admin ws or host
$ curl -k https://anthos.home.lab/istio
Hello, world!
Version: 1.0.0
Hostname: my-istio-deployment-d6cbc8689-cmtxx


#
# before upgrading to 1.7.5
#
# canary is not suported wit non-revisioned operators until 1.8, https://github.com/istio/istio/issues/28964

# make pilot addon explicit, and make control plane revision '1-6-6' for istiod and  istiosidecareinjector
kubectl apply -f istio-operator-1.6.6-beforeupgrade.yaml

# make sure namespace labels are set properly for upcoming 1.7.5 with modern 'istio.io/rev=1-7-5' tag
./namespace-labels-for-1.6.6-modernize.sh

# but notice that IstioOperators is still at 1-6-6
# read: https://istio.io/latest/docs/setup/install/operator/#canary-upgrade
#
kubectl get -n istio-system iop
NAME                  REVISION   AGE
istio-control-plane   1-6-6      87m

# labels and image still reflect 1.6.6
$ kubectl describe -n istio-system deployment/istio-ingressgateway
 Labels:           app=istio-ingressgateway
                    chart=gateways
                    heritage=Tiller
                    istio=ingressgateway
                    release=istio
                    service.istio.io/canonical-name=istio-ingressgateway
                    service.istio.io/canonical-revision=1-6-6
Image:       docker.io/istio/proxyv2:1.6.6

# labels and image still reflect 1.6.6
$ kubectl describe -n istio-operator deployment/istio-operator

Labels:                 install.operator.istio.io/owning-resource=
                        install.operator.istio.io/owning-resource-namespace=
                        operator.istio.io/component=IstioOperator
                        operator.istio.io/managed=Reconcile
                        operator.istio.io/version=1.6.6

   istio-operator:
    Image:      docker.io/istio/operator:1.6.6


# spec.Revision still reflect 1.6.6
$ kubectl describe -n istio-system iop/istio-control-plane
Name:         istio-control-plane
Namespace:    istio-system
Labels:       <none>
...
Spec:
...
  Profile:                default
  Revision:               1-6-6



#
# upgrading to 1.7.5
#
# https://istio.io/v1.7/docs/setup/upgrade/
# https://banzaicloud.com/blog/istio-canary-upgrade/


cd ~/k8s
export istiover=1.7.5
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck

# canary upgrade of control plane: new operator-<rev>, istiod-<rev>, istio-sidecar-injector-<rev>
# the part I do not understand is that the istio-ingressgateway is also upgraded
# I wouldn't expect that as a canary upgrade
istio-$istiover/bin/istioctl operator init --revision 1-7-5


# two istio operators
$ kubectl get deployments -n istio-operator
NAME                   READY   UP-TO-DATE   AVAILABLE   AGE
istio-operator         1/1     1            1           8h
istio-operator-1-7-5   1/1     1            1           91s

# still only single control plane (when does this get upgraded?)
$ kubectl get -n istio-system iop
NAME                  REVISION   STATUS        AGE
istio-control-plane   1-6-6      RECONCILING   8h

# ingress gateway is now at 1.7.5
$ kubectl describe -n istio-system deployment/istio-ingressgateway | grep Labels -A10
  Labels:           app=istio-ingressgateway
                    chart=gateways
                    heritage=Tiller
                    istio=ingressgateway
                    release=istio
                    service.istio.io/canonical-name=istio-ingressgateway
                    service.istio.io/canonical-revision=1-7-5
Image:       docker.io/istio/proxyv2:1.7.5


# change istio.io/rev labels to new version
cd ~/k8s/istio-operator
./namespace-labels-for-1.7.5.sh

# now try rolling deployment restart
kubectl rollout restart -n default deployment/my-istio-deployment
# to do entire namespace!
# kubectl rollout restart deployment -n default

# envoy proxy now at new version
$ kubectl describe pod -lapp=my-istio-deployment | grep 'Image:'
    Image:         docker.io/istio/proxyv2:1.7.5
    Image:          gcr.io/google-samples/hello-app:1.0
    Image:         docker.io/istio/proxyv2:1.7.5
    Image:         docker.io/istio/proxyv2:1.7.5
    Image:          gcr.io/google-samples/hello-app:1.0
    Image:         docker.io/istio/proxyv2:1.7.5


# removing the old operator revision, will this work for our non revision 1.6.6 op?
istioctl operator remove --revision <revision>
# because otherwise we can consider
kubectl delete istiooperators.install.istio.io -n istio-system istio-control-plane


