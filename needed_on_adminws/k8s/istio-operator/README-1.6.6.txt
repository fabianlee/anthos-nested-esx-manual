f#
# To remove the OOTB istio that comes with Anthos 1.4 and replace with a full 1.6.6 istio operator
#

# remove my istio components
cd ~/k8s
kubectl delete -f istio-ootb/my-istio-virtualservice.yaml
kubectl delete -f istio-ootb/istio-autogenerated-k8s-ingress.yaml
kubectl delete -f istio/my-service-for-istio.yaml

# remove ootb istio components
cd ~/k8s/istio-ootb
./delete-istio-ootb-components.sh

# create tls key/cert, k8s TLS secret, istio gateway using secret
cd ~/k8s/istio
./make-self-signed-cert.sh

kubectl create ns istio-system



#
# install istio 1.6.6 operator, fresh but without a revision
#
cd ~/k8s
export istiover=1.6.6
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck
# NOTE 1.6.6 did NOT have a concept of '--revision 1-6-6', that came with 1.7
istio-$istiover/bin/istioctl operator init --hub gcr.io/istio-release

kubectl get all -n istio-operator

kubectl apply -f istio-operator/istio-operator-1.6.6.yaml

# until you see "Ingress gateways installed"
istio-operator/show-istio-operator-logs.sh default

# then wait for all components to be 'Running'
watch -n2 kubectl get pods -n istio-system

# 'istio-ingressgateway' will be on EXTERNAL-IP
kubectl get services -n istio-system

# apply legacy namespace labels for 1.6.6 (older 'istio-injection')
istio-operator/namespace-labels-legacy.sh

# notice because of no revision there are no versions on: operator, iop, istiod, mutatingwebhook
istio-operator/show-istio-versions.sh

cd ~/k8s/istio-operator
./create-k8s-tls-secret.sh
cd ~/k8s

# 'my-istio-deployment' and 'my-istio-service'
kubectl apply -f istio-operatormy-istio-deployment-and-service.yaml
# 'my-istio-virtualservice'
kubectl apply -f istio-operatormy-istio-virtualservice.yaml
# 'istio-ingressgateway' referencing 'tls-credential' secret
kubectl apply -f istio-operatormy-istio-ingress-gateway.yaml

# rolling deployment restart and wait for ready
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status deployment my-istio-deployment

# validate from either admin ws or host
$ curl -k https://anthos.home.lab/istio
Hello, world!
Version: 1.0.0
Hostname: my-istio-deployment-d6cbc8689-cmtxx

# check for interruptions in different console
./test-istio-endpoint.sh



#
# before upgrading to 1.7.5, take 1-6-6 to revisioned control plane
# canary is not suported with non-revisioned operators until 1.8, https://github.com/istio/istio/issues/28964
#

# change to newer style namespace labels
cd ~/k8s
istio-operator/namespace-labels.sh 1-6-6

# make pilot addon explicit and make control plane revision '1-6-6' for istiod and istiosidecareinjector
kubectl apply -f istio-operator/istio-operator-1.6.6-beforeupgrade-1.7.5.yaml

# until you see "Addons installed"
istio-operator/show-istio-operator-logs.sh default

# notice new revisions on: istiod, iop, mutatingwebhook
istio-operator/show-istio-versions.sh

# delete default (no-revision) control plane objects leaving only the revision ones
istio-operator/delete-no-revision-controlplane.sh

# notice the only vestige of non-revisioned objects is the operator 'istio-operator'
istio-operator/show-istio-versions.sh

# rolling deployment restart, but not really needed since the proxyv2:1.6.6 was already applied
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status deployment my-istio-deployment


#
# installing 1.7.5
#
# https://istio.io/v1.7/docs/setup/upgrade/
# https://banzaicloud.com/blog/istio-canary-upgrade/

cd ~/k8s
export istiover=1.7.5
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck

$ istio-$istiover/bin/istioctl operator init --revision 1-7-5 --hub gcr.io/istio-release
Using operator Deployment image: docker.io/istio/operator:1.7.5
2021-08-28T22:13:45.885707Z	info	proto: tag has too few fields: "-"
✔ Istio operator installed                                                                                              
✔ Installation complete

# create istio-system which does not exist yet
kubectl get all -n istio-operator

# only do if this is a new deployment, not for upgrade!!!
# kubectl apply -f istio-operator/istio-operator-1.7.5.yaml

# until you see "Ingress gateways installed"
istio-operator/show-istio-operator-logs.sh 1-7-5

# then wait for all components to be 'Running'
watch -n2 kubectl get pods -n istio-system
NAME                                    READY   STATUS    RESTARTS   AGE
istio-ingressgateway-6bdd7687b6-86cls   1/1     Running   0          2m22s
istiod-1-7-5-649b69468-ptjrj            1/1     Running   0          2m34s

# 'istio-ingressgateway' will be on EXTERNAL-IP
kubectl get services -n istio-system

# apply namespace label istio.io/rev
istio-operator/namespace-labels.sh 1-7-5

istio-operator/show-istio-versions.sh

# 'my-istio-deployment' and 'my-istio-service'
kubectl apply -f istio-operator/my-istio-deployment-and-service.yaml
# 'my-istio-virtualservice'
kubectl apply -f istio-operator/my-istio-virtualservice.yaml
# 'istio-ingressgateway' referencing 'tls-credential' secret
kubectl apply -f istio-operator/my-istio-ingress-gateway.yaml

# rolling deployment restart, then wait for it to finish
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status  -n default deployment my-istio-deployment

# to do entire namespace!
# kubectl rollout restart deployment -n default

istio-operator/show-istio-versions.sh


#
# uninstall the old control plane 1-6-6
#

# will see both 1-6-6 and 1-7-5 control planes
$ istio-operator/show-istio-versions.sh

# this is NOT a 1.6.6 command
# $ istio-1.6.6/bin/istioctl x uninstall
# DO NOT use this because it deletes all operators!
$ istio-1.6.6/bin/istioctl operator remove
kubectl delete mutatingwebhookconfiguration/istio-sidecar-injector

# can I use 1.7.5 experimental uninstall to remove 1-6-6 revision?
# $ istio-1.6.6/bin/istioctl x uninstall

TODO: should I just delete single operator, and not rely on istioctl?

# switch over iop to new revision
kubectl patch -n istio-system --type merge iop/istio-control-plane -p '{"spec":{"revision":"1-7-5"}}'

# wait for state to go HEALTHY
watch kubectl get -n istio-system iop

# only 1-7-5 will be present
$ istio-operator/show-istio-versions.sh



