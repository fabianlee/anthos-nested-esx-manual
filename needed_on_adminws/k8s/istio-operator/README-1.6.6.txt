f#
# To remove the OOTB istio that comes with Anthos 1.4 and replace with a full 1.6.6 istio operator
#

# remove my istio components
cd ~/k8s
kubectl delete -f istio-ootb/my-istio-virtualservice.yaml
kubectl delete -f istio-ootb/istio-autogenerated-k8s-ingress.yaml
kubectl delete -f istio/my-service-for-istio.yaml

# remove ootb istio components
cd ~/k8s/istio-ootb
./delete-istio-ootb-components.sh




#
# install istio 1.6.6 operator, fresh but without a revision
#
cd ~/k8s
export istiover=1.6.6
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck
# NOTE 1.6.6 did NOT have a concept of '--revision 1-6-6', that came with 1.7
istio-$istiover/bin/istioctl operator init --hub gcr.io/istio-release

kubectl get all -n istio-operator
kubectl create ns istio-system

kubectl apply -f istio-operator/istio-operator-1.6.6.yaml

# until you see "Ingress gateways installed|Addons installed"
istio-operator/show-istio-operator-logs.sh default

# then wait for all components to be 'Running'
watch -n2 kubectl get pods -n istio-system

# 'istio-ingressgateway' will be on EXTERNAL-IP
kubectl get services -n istio-system

# apply namespace labels for 1.6.6 (using older 'istio-injection')
istio-operator/namespace-labels-for-1.6.6.sh 

istio-operator/show-istio-versions.sh

# create tls key/cert, k8s TLS secret, istio gateway using secret
cd ~/k8s/istio
./make-self-signed-cert.sh

cd ~/k8s/istio-operator
./create-k8s-tls-secret.sh

# 'my-istio-deployment' and 'my-istio-service'
kubectl apply -f my-istio-deployment-and-service.yaml
# 'my-istio-virtualservice'
kubectl apply -f my-istio-virtualservice.yaml
# 'istio-ingressgateway' referencing 'tls-credential' secret
kubectl apply -f my-istio-ingress-gateway.yaml

# rolling deployment restart and wait for ready
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status deployment my-istio-deployment

# validate from either admin ws or host
$ curl -k https://anthos.home.lab/istio
Hello, world!
Version: 1.0.0
Hostname: my-istio-deployment-d6cbc8689-cmtxx



#
# before upgrading to 1.7.5, take 1-6-6 to revisioned control plane
# canary is not suported with non-revisioned operators until 1.8, https://github.com/istio/istio/issues/28964
#

# make pilot addon explicit and make control plane revision '1-6-6' for istiod and istiosidecareinjector
cd ~/k8s
kubectl apply -f istio-operator/istio-operator-1.6.6-beforeupgrade-1.7.5.yaml
istio-operator/show-istio-versions.sh

# check for interruptions in different console
./test-istio-endpoint.sh

# change to newer style namespace labels
./namespace-labels.sh 1-6-6

# delete default (no-revision) control plane objects leaving only the revision ones
istio-operator/delete-no-revision-controlplane.sh

# rolling deployment restart
kubectl rollout restart -n default deployment/my-istio-deployment
kubectl rollout status deployment my-istio-deployment

istio-operator/show-istio-versions.sh





#
# upgrading to 1.7.5
#
# https://istio.io/v1.7/docs/setup/upgrade/
# https://banzaicloud.com/blog/istio-canary-upgrade/

cd ~/k8s
export istiover=1.7.5
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=$istiover sh -

istio-$istiover/bin/istioctl x precheck

# canary upgrade of control plane: new operator-<rev>, istiod-<rev>, istio-sidecar-injector-<rev>
# the istio-system iop/istio-control-plane revision does NOT change
# the ns/istio-operator label istio.io/rev=1-7-8
# and as describe here the istio gateways are upgraded in-place with the control plane (https://istio.io/v1.7/docs/setup/upgrade/#data-plane)
istio-$istiover/bin/istioctl operator init --revision 1-7-5

# there will now be two istio-operator (istio-operator,istio-operator-1-7-5)
istio-operator/show-istio-versions.sh

cd ~/k8s
kubectl apply -f istio-operator/istio-operator-1.7.5.yaml

# until you see "Ingress gateways installed|Addons installed"
istio-operator/show-istio-operator-logs.sh 1-7-5

# then wait for all components to be 'Running'
watch -n2 kubectl get pods -n istio-system


istio-operator/show-istio-versions.sh


# make sure namespace labels are set properly for upcoming 1.7.5 with modern 'istio.io/rev=1-7-5' tag
istio-operator/namespace-labels.sh 1-7-5




# but ingress gateway is now at 1.7.5 (so ingress gateway switches immediately even in canary upgrade?)
$ kubectl describe -n istio-system deployment/istio-ingressgateway | grep Labels -A10
  Labels:           app=istio-ingressgateway
                    chart=gateways
                    heritage=Tiller
                    istio=ingressgateway
                    release=istio
                    service.istio.io/canonical-name=istio-ingressgateway
                    service.istio.io/canonical-revision=1-7-5
Image:       docker.io/istio/proxyv2:1.7.5

# both versions
$ kubectl get mutatingwebhookconfiguration
NAME                           CREATED AT
istio-sidecar-injector-1-6-6   2021-08-27T00:18:35Z
istio-sidecar-injector-1-7-5   2021-08-27T00:18:35Z



# change istio.io/rev labels to new version
cd ~/k8s/istio-operator
./namespace-labels-for-1.x.sh 1-7-5

# now try rolling deployment restart
kubectl rollout restart -n default deployment/my-istio-deployment
# to do entire namespace!
# kubectl rollout restart deployment -n default

# envoy proxy now at new version
$ kubectl describe pod -lapp=my-istio-deployment | grep 'Image:'
    Image:         docker.io/istio/proxyv2:1.7.5
    Image:          gcr.io/google-samples/hello-app:1.0
    Image:         docker.io/istio/proxyv2:1.7.5
    Image:         docker.io/istio/proxyv2:1.7.5
    Image:          gcr.io/google-samples/hello-app:1.0
    Image:         docker.io/istio/proxyv2:1.7.5


# removing the old operator revision, will this work for our non revision 1.6.6 op?
cd ~/k8s

# do NOT do this for a canary upgrade it deletes all the objects in 'istio-operator' (e.g. iop)
# however it leaves all the control plane objects in 'istio-system'
# had to clear 'finalizer' field for iop before it finished
# istio-istioctl operator remove --revision <revision>

# try this instead next time
$ kubectl delete istiooperators.install.istio.io -n istio-system istio-control-plane
istiooperator.install.istio.io "istio-control-plane" deleted


